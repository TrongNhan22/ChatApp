<!DOCTYPE html>
<html>
<head>
    <title>SignalR Chat</title>
    <style type="text/css">
        .container {
            background-color: #99CCFF;
            border: thick solid #808080;
            padding: 20px;
            margin: 20px;
        }
    </style>
</head>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
<body>
    <section style="background-color: #CDC4F9;">
        <div class="container py-5">

            <div class="row">
                <div class="col-md-12">

                    <div class="card" id="chat3" style="border-radius: 15px;">
                        <div class="card-body">

                            <div class="row">
                                <div class="col-md-6 col-lg-5 col-xl-4 mb-4 mb-md-0">

                                    <div class="p-3">

                                        <div class="input-group rounded mb-3">
                                            <input type="search" class="form-control rounded" placeholder="Search" aria-label="Search"
                                                   aria-describedby="search-addon" />
                                            <span class="input-group-text border-0" id="search-addon">
                                                <i class="fas fa-search"></i>
                                            </span>
                                        </div>

                                        <div data-mdb-perfect-scrollbar="true" style="position: relative; height: 400px; overflow-y: scroll">
                                            <ul class="list-unstyled mb-0">
                                                <li class="p-2 border-bottom">
                                                    <a href="#!" class="d-flex justify-content-between">
                                                        <div class="d-flex flex-row">
                                                            <div>
                                                                <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava5-bg.webp"
                                                                     alt="avatar" class="d-flex align-self-center me-3" width="60">
                                                                <span class="badge bg-warning badge-dot"></span>
                                                            </div>
                                                            <div class="pt-1">
                                                                <p class="fw-bold mb-0">Kate Moss</p>
                                                                <p class="small text-muted">Lorem ipsum dolor sit.</p>
                                                            </div>
                                                        </div>
                                                        <div class="pt-1">
                                                            <p class="small text-muted mb-1">Yesterday</p>
                                                        </div>
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>

                                    </div>

                                </div>

                                <div class="col-md-6 col-lg-7 col-xl-8">

                                    <div id="chatbox" class="pt-3 pe-3" data-mdb-perfect-scrollbar="true"
                                         style="position: relative; height: 400px; overflow-y: scroll">
                                        <!--This is where chat content will be-->
                                    </div>

                                    <div class="text-muted d-flex justify-content-start align-items-center pe-3 pt-3 mt-2">
                                        <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava6-bg.webp"
                                             alt="avatar 3" style="width: 40px; height: 100%;">
                                        <input type="text" class="form-control form-control-lg" id="messageinput"
                                               placeholder="Nhập tin nhắn">
                                               <button id="sendmessage">Send</button>
                                        <a class="ms-1 text-muted" href="#!"><i class="fas fa-paperclip"></i></a>
                                        <a class="ms-3 text-muted" href="#!"><i class="fas fa-smile"></i></a>
                                        <a class="ms-3" href="#!"><i class="fas fa-paper-plane"></i></a>
                                    </div>

                                </div>
                            </div>

                        </div>
                    </div>

                </div>
            </div>

        </div>
    </section>
    <!--Script references. -->
    <!--Reference the SignalR library. -->
    <script type="text/javascript" src="~/lib/signalr/signalr.js"></script>
    <!--Add script to update the page and send messages.-->
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {

            var messageInput = document.getElementById('messageinput');

            // Get the user name and store it to prepend to messages.
            var name = prompt('Enter your name:', '');
            // Set initial focus to message input box.
            messageInput.focus();

            // Start the connection.
            var connection = new signalR.HubConnectionBuilder()
                .withUrl('/ChatHub')
                .build();

            // Create a function that the hub can call to broadcast messages.
            connection.on('broadcastMessage', function (message) {
                // Html encode display name and message.
                console.log(message)
                // Add the message to the page.
                var chatElement = document.createElement('div');
                var innerHtml = (message.senderId == name)
                ?
                `
                        <div class="d-flex flex-row justify-content-end" >
                            <div>
                                <p class="small p-2 me-3 mb-1 text-white rounded-3 bg-primary" >
                                    ${message.content}
                                </p>
                                <p class="small me-3 mb-3 rounded-3 text-muted"> 12: 00 PM | Aug 13 </p>
                `
                :
                `
                        <div class="d-flex flex-row justify-content-start" >
                            <p>${message.senderId} </p>
                            <div>
                                <p class="small p-2 ms-3 mb-1 rounded-3" style = "background-color: #f5f6f7;" >
                                    ${message.content}
                                </p>
                                <p class="small ms-3 mb-3 rounded-3 text-muted float-end">
                                    12: 00 PM | Aug 13
                                </p>
                            </div>
                        </div>
                `;

                chatElement.innerHTML = innerHtml;
                document.getElementById('chatbox').appendChild(chatElement);
            });

            // Transport fallback functionality is now built into start.
            connection.start()
                .then(function () {
                    console.log('connection started');
                    document.getElementById('sendmessage').addEventListener('click', function (event) {
                        var messageModel = {
                            Id: '',
                            SenderId: name,
                            ReceiverId: '',
                            Content: messageInput.value,
                            Media: '',
                        }

                        connection.invoke('send', messageModel);

                        // Clear text box and reset focus for next comment.
                        messageInput.value = '';
                        messageInput.focus();
                        event.preventDefault();
                    });
                })
                .catch(error => {
                    console.error(error.message);
                });
        });
    </script>
</body>
</html>